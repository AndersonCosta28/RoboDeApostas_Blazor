// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoboDeApostas.Database;

#nullable disable

namespace RoboDeApostas.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("RoboDeApostas.Models.Liga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Liga");
                });

            modelBuilder.Entity("RoboDeApostas.Models.LinkDaLiga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CasaDeAposta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LigaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LigaId");

                    b.HasIndex("Link")
                        .IsUnique();

                    b.ToTable("LinkDaLiga");
                });

            modelBuilder.Entity("RoboDeApostas.Models.Partida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("DataCompleta")
                        .HasColumnType("TEXT");

                    b.Property<string>("Liga")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LinkDaPartida")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeDaCasaDeAposta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeTimeDaCasa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeTimeVisitante")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("ODD_Empate_Ambos")
                        .HasColumnType("REAL");

                    b.Property<double>("ODD_VitoriaOuEmpate_TimeCasa")
                        .HasColumnType("REAL");

                    b.Property<double>("ODD_VitoriaOuEmpate_TimeVisitante")
                        .HasColumnType("REAL");

                    b.Property<double>("ODD_Vitoria_TimeDaCasa")
                        .HasColumnType("REAL");

                    b.Property<double>("ODD_Vitoria_TimeVisitante")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("RoboDeApostas.Models.Surebet2Casas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Surebet2Casas");
                });

            modelBuilder.Entity("RoboDeApostas.Models.Surebet3Casas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Surebet3Casas");
                });

            modelBuilder.Entity("RoboDeApostas.Models.LinkDaLiga", b =>
                {
                    b.HasOne("RoboDeApostas.Models.Liga", "Liga")
                        .WithMany()
                        .HasForeignKey("LigaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Liga");
                });
#pragma warning restore 612, 618
        }
    }
}
