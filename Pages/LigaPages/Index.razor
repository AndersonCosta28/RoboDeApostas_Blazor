@page "/liga"
@inject DatabaseContext context
@inject NavigationManager NavigationManager
<h3>Ligas</h3>
<h4>Quantidade de ligas: @ligas.Count</h4>
<div class="row justify-content-between">
    <div class="col-4">
        <input type="search" placeholder="Pesquisar" @bind="this.textoDePesquisa" />
    </div>
    <div class="col-2">
        <button class="btn btn-primary" @onclick="() => NavigationManager.NavigateTo(this.link)">Criar liga</button>
    </div>
</div>
<table class="table" style="width: 100%">
    <thead>
        <tr>
            <th scope="col">Nome</th>
            <th scope="col" colspan="2" style="text-align: center">Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Liga liga in this.ligas.Where(l => l.Nome.ToLower().Contains(textoDePesquisa.ToLower())))
        {
            int id = liga.Id;
            <tr>
                <td>@liga.Nome</td>
                <td><button class="btn btn-secondary" @onclick="() => this.NavegarParaATelaDeEdicao(id)">Editar</button></td>
                <td><button class="btn btn-danger" @onclick="() => this.NavegarParaATelaDeExclusao(id)">Deletar</button></td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Liga> ligas;
    private string link = "/liga/create";
    private string textoDePesquisa = "";
    protected override Task OnInitializedAsync()
    {
        this.ligas = context.Liga.OrderBy(l => l.Nome).ToList();
        return base.OnInitializedAsync();
    }
    public void NavegarParaATelaDeEdicao(int id)
    {
        Console.WriteLine(id);
        NavigationManager.NavigateTo($"/liga/edit/{id}");
    }
    public void NavegarParaATelaDeExclusao(int id)
    {
        NavigationManager.NavigateTo($"/liga/delete/{id}");
    }
}
